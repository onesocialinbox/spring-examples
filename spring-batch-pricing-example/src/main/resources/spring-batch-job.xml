<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:batch="http://www.springframework.org/schema/batch"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-2.2.xsd">

	<batch:job id="pricingJob">
		<batch:step id="decompressStep" next="processPricingStep">
			<batch:tasklet ref="decompressTasklet" />
		</batch:step>

		<batch:step id="processPricingStep">
			<batch:tasklet>
				<batch:chunk reader="pricingReader" writer="pricingWriter"
					commit-interval="3" skip-limit="5">
					<batch:skippable-exception-classes>
						<batch:include
							class="org.springframework.batch.item.file.FlatFileParseException" />
					</batch:skippable-exception-classes>
				</batch:chunk>

			</batch:tasklet>
		</batch:step>

	</batch:job>


	<bean id="decompressTasklet" class="com.example.springbatch.pricing.DecompressTasklet" scope="step">
		<property name="inputResource" value="#{jobParameters['inputResource']}" />
		<property name="targetDirectory" value="#{jobParameters['targetDirectory']}" />
		<property name="targetFile" value="#{jobParameters['targetFile']}" />
	</bean>



	<bean id="pricingReader" class="org.springframework.batch.item.file.FlatFileItemReader"
		scope="step">
		<property name="resource"
			value="file:#{jobParameters['targetDirectory']+jobParameters['targetFile']}" />
		<property name="linesToSkip" value="1" />
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="lineTokenizer">
					<bean
						class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
						<property name="names" value="TICKER,COMPANYNAME,INDUSTRY,PRICE" />
					</bean>
				</property>
				<property name="fieldSetMapper">
					<bean class="com.example.springbatch.pricing.PricingFieldSetMapper" />
				</property>
			</bean>
		</property>
	</bean>
	
	<bean id="pricingWriter" class="com.example.springbatch.pricing.PriceJdbcItemWriter">
		<property name="jdbcTemplate" ref="jdbcTemplate"></property>
	</bean>

	<!-- <bean id="decompressTasklet" class="com.example.springbatch.pricing.DecompressTasklet"> 
		<property name="inputResource" value="classpath:/input/dailyprices.zip" /> 
		<property name="targetDirectory" value="./target/batchoutput" /> <property 
		name="targetFile" value="prices.txt" /> </bean> -->


	<bean id="jdbcTemplate"
		class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" ></property>
	</bean>
</beans>
